
Curso Spring Boot & MVC com Thymeleaf (Udemy - 27/07/2018)

Seção 1:
	
	Aula 1 - Introdução : Visão geral do Projeto que vai ser desenvolvido.

		- Ferramentas que vão ser utilizadas:

			* Spring Tool Suite (IDE - STS).

			* Banco de dados MySql: Servidor Community Server 5.5.6 e Ferramenta Workbench.

		- Material de apoio.

		- Colocar o projeto no github: 
		
			* Vídeo aula sobre o git e github. 
			
			* O git é um sistema de versionamento distribuido.

			* O git tem o kernel desenvolvido em linux e segue arquitetura per to per (ponto a ponto).

			* Configuração do git: https://www.youtube.com/watch?v=yNwh0S0S0bU

				- $>git --version (verificar instalação).
				- $>git config --global user.name (nome do usuário)
				- $>git config --global user.email (email do usuário)
 				- $>git config --lis (exibe a configuração do usuário)
				- $(pasta do projeto)>git init (inicia o git na pasta indicada)
				- $(pasta do projeto)>git status (exibe informações sobre a pasta do projeto)
				- $(pasta do projeto)>git add . (incluir todos os arquivos modificados para área stage pronto para realizar 
				commiti)
				- $(pasta do projeto)>git commit -m "mensagem do commit" (commit dos arquivos da área de stage)
				- $(pasta do projeto)>git log (exibe o histórico do git na pasta indicada)
				- O vídeo mostra (16:50) como configurar o git para ignorar arquivos que não precisam ser
				versionados(ignorados pelo git).
				- Para remover o arquivo do git e localmente $(pasta do projeto)>git rm (nome do arquivo). Depois deve ser feito
				$(pasta do projeto)>git commit -m "mensagem", para registrar remoção do arquivo no git.
				- $(pasta do projeto)>git clone https://(endereço do projeto no github) permite fazer uma copia do projeto
				localmente(clone), quando quero transferir do github para minha pasta local.
				- $(pasta do projeto)>git remote add origin https://github.com/lincolnjohn/springbootthymeleaf.git, depois do
				projeto criado no github para vincular com o projeto local
				- $(pasta do projeto)>git push -u origin master (para enviar inicialmente o meu projeto ao github, depois somente
				utilizar git push)
				- $(pasta do projeto)>git pull (sincroniza os arquivos do remoto com o projeto local)


	Aula 2 - Injeção de Dependência:

		* Padrão de Projetos incorporado ao Spring Framework.

		* Diminuir o acoplamento e alta coesão um dos principios da orientação objetos, baixo acoplamento dependência de outras 
		classes e alta coesão ligada a responsbilidade única.

		* Basear a dependência em classes abstratas.

		* Inversão de controle, retira do programador a responsabilidade de criar objetos e passa a um container.

	Aula 3 - Anotações do Spring:

		* @Component identifica um Bean, classe gerenciado pelo Spring Framework.

		* @Repository identifica um Bean, clasee gerenciado pelo Spring Framework to tipo persistente em Banco de dados.

		* @Service identifica um Bean, classe gerenciado pelo Spring Framework que prover um serviço as regras de negócio.

		* @Autowired identifica para o Spring que ele deve injetar a variável anotada na classe em que está declarada.
		Pode ser utilizada em métodos ou no Construtor.







